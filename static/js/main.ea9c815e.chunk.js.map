{"version":3,"sources":["context/GlobalState.js","components/Header/Header.js","components/Footer/Footer.js","components/Product/ProductDetail.js","components/Product/ProductItem.js","components/Product/ProductGrid.js","pages/Store.js","pages/About.js","components/CartItem/CartItem.js","pages/Cart.js","components/FavoriteItem/FavoriteItem.js","pages/Wishlist.js","App.js","index.js"],"names":["StateContext","React","createContext","StateProvider","children","useState","products","setProducts","cartItems","setCartItems","total","setTotal","totalItems","setTotalItems","favoriteItems","setFavoriteItems","calcQuantity","totalQty","reduce","product","quantity","resetCart","useEffect","fetch","then","response","json","data","totalPrices","price","toFixed","Provider","value","addToCart","index","findIndex","item","id","push","removeFromCart","pop","addToFavorite","newItem","prevItems","removeFromFavorite","filter","increaseCount","decreaseCount","checkOutCart","Swal","fire","Header","useContext","className","to","length","Footer","Date","getFullYear","ProductDetail","productId","useParams","thisProduct","map","src","url","alt","title","description","onClick","ProductItem","some","ProductGrid","Store","About","href","target","CartItem","Cart","FavoriteItem","Wishlist","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea9c815e.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\"\r\nimport Swal from 'sweetalert2'\r\n\r\n// creating `context`\r\nconst StateContext = React.createContext()\r\n\r\nfunction StateProvider({children}){\r\n    // defining `state` for our product data\r\n    const [products, setProducts] = useState([])\r\n    // defining `state` for our cart data\r\n    const [cartItems, setCartItems] = useState([])\r\n    // defining `state` for calculating total amount\r\n    const [total, setTotal] = useState(0);\r\n    // defining `state` for counting total items in\r\n    const [totalItems, setTotalItems] = useState(0);\r\n    // defining `state` for favorite product data\r\n    const [favoriteItems, setFavoriteItems] = useState([])\r\n\r\n    // fetching product data\r\n    const url = \"https://raw.githubusercontent.com/mahmud-sajib/ecommerce-store-product-data/master/data.json\"\r\n    \r\n    useEffect(() => {\r\n        fetch(url)\r\n        .then(response => response.json()) // get json data from api\r\n        .then(data => setProducts(data)) // save data to `state` \r\n    }, [])\r\n\r\n    // calculate cart quantity\r\n    function calcQuantity() {\r\n        const totalQty = cartItems.reduce((total, product) => total + product.quantity, 0)\r\n        setTotalItems(totalQty)\r\n    }\r\n\r\n    // addToCart button functionality\r\n    function addToCart(product){\r\n        // check if the newly added product is already in cart by getting it's index\r\n        const index = cartItems.findIndex(item => item.id === product.id);\r\n        // if index not found push it to cart & set quantity to 1 else update the quantity only\r\n        if(index === -1){\r\n            cartItems.push({...product, quantity:1})   \r\n        } else {\r\n            cartItems[index].quantity += 1 \r\n        }\r\n        // update cart quantity\r\n        calcQuantity()  \r\n    }\r\n\r\n    // removeFromCart button functionality\r\n    function removeFromCart(product){\r\n        // remove product from cart\r\n        cartItems.pop(product)\r\n        // update cart quantity\r\n        calcQuantity()\r\n    }\r\n\r\n    // counter increase button functionality\r\n    function increaseCount(id) {\r\n        // check if the newly added product is already in cart by getting it's index\r\n        const index = cartItems.findIndex(item => item.id === id);\r\n        // increase the quantity by 1 \r\n        cartItems[index].quantity += 1\r\n        // update cart quantity\r\n        calcQuantity()\r\n    }\r\n\r\n    // counter decrease button functionality\r\n    function decreaseCount(id) {\r\n        // check if the newly added product is already in cart by getting it's index\r\n        const index = cartItems.findIndex(item => item.id === id);\r\n        // decrease the quantity by 1\r\n        cartItems[index].quantity -= 1\r\n        // update cart quantity\r\n        calcQuantity()\r\n    }\r\n\r\n    // addToFavorite button functionality\r\n    function addToFavorite(newItem){\r\n        setFavoriteItems(prevItems => [...prevItems, newItem])\r\n    }\r\n\r\n    // removeFromFavorite button functionality\r\n    function removeFromFavorite(id){\r\n        setFavoriteItems(prevItems => prevItems.filter(item => item.id !== id))\r\n    }\r\n\r\n    function resetCart() {\r\n        setCartItems([])\r\n        setTotalItems(0)\r\n    }\r\n\r\n    function checkOutCart() {\r\n        resetCart()\r\n        Swal.fire(\r\n            'Congrats!',\r\n            'You successfully placed an order!',\r\n            'success'\r\n        )\r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n        // calculate total bill\r\n        const totalPrices = cartItems.reduce((total, product) => total + product.price * product.quantity, 0).toFixed(2);\r\n            setTotal(totalPrices);\r\n\r\n    }, [totalItems, cartItems])\r\n    \r\n    return(\r\n        <StateContext.Provider value={{products, total, totalItems, cartItems, addToCart, removeFromCart, favoriteItems, addToFavorite, removeFromFavorite, increaseCount, decreaseCount, resetCart, checkOutCart}}>\r\n            {children}\r\n        </StateContext.Provider>\r\n    )\r\n}\r\n\r\nexport {StateContext, StateProvider}","import React, {useContext} from 'react'\r\nimport { StateContext } from '../../context/GlobalState'\r\nimport {Link} from 'react-router-dom'\r\nimport './header.css'\r\n\r\nfunction Header() {\r\n    // consuming context\r\n    const {totalItems, favoriteItems} = useContext(StateContext)\r\n\r\n    // render JSX\r\n    return (\r\n        <nav>\r\n            <div className=\"logo\">\r\n                <Link to='/'>Island Tees</Link>\r\n            </div>\r\n            <ul className=\"nav-items\">\r\n                <li><Link to='/'>Store</Link></li>\r\n                <li><Link to='/about'>About</Link></li>\r\n            </ul>\r\n            <ul className=\"nav-icons\">\r\n                <li>\r\n                    <Link to='/wishlist'>\r\n                        <i className=\"ri-heart-2-line\"></i>\r\n                        <span className=\"item-count\">{favoriteItems.length}</span> \r\n                    </Link>\r\n                </li>\r\n                <li> \r\n                    <Link to='/cart'>\r\n                        <i className=\"ri-shopping-basket-2-line\"></i>\r\n                        <span className=\"item-count\">{totalItems}</span>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport './footer.css'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <p>Copyright &copy; {new Date().getFullYear()} Island Tees Store | Built with ReactJs</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React, {useContext} from 'react'\r\nimport { StateContext } from '../../context/GlobalState'\r\nimport {useParams} from 'react-router-dom'\r\n\r\nfunction ProductDetail() {\r\n    // consuming contexts\r\n    const {addToCart} = useContext(StateContext)\r\n\r\n    // get id of current product\r\n    const {productId} = useParams()\r\n\r\n    // fetch all products data\r\n    const {products} = useContext(StateContext)\r\n    \r\n    // filter the product with matching id\r\n    const thisProduct = products.filter(product => product.id === productId)\r\n    \r\n    // render JSX\r\n    return (\r\n        // map all information of that specific product\r\n        <section>\r\n            {\r\n                thisProduct.map(product => {\r\n                    return(\r\n                        <div key={product.id} className=\"product-detail\">\r\n                            <div className=\"product-detail-image\">\r\n                                <img src={product.url} alt=\"product\" />\r\n                            </div>\r\n                            <div className=\"product-detail-info\">\r\n                                <h3>{product.title}</h3>\r\n                                <h4>${product.price}</h4>\r\n                                <p className=\"lead\">{product.description}</p> \r\n                                \r\n                                <button onClick={() => addToCart(product)} className=\"add-cart-btn\">Add to Cart</button> \r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ProductDetail\r\n","import React, {useContext} from 'react'\r\nimport { StateContext } from '../../context/GlobalState'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction ProductItem({product}) {\r\n    // consuming contexts\r\n    const {addToCart, favoriteItems, addToFavorite, removeFromFavorite} = useContext(StateContext)\r\n\r\n    // Cart button display\r\n    function cartButton() {\r\n        return (\r\n            <button onClick={() => addToCart(product)} className=\"add-cart-btn\">Add to Cart</button>\r\n        ) \r\n    }\r\n\r\n    // determine which Favorite button to display\r\n    function favoriteButton() {\r\n        // check which product is already favorited\r\n        const alreadyFavorited = favoriteItems.some(item => item.id===product.id)\r\n        \r\n        if(alreadyFavorited){\r\n            return (\r\n                <i onClick={() => removeFromFavorite(product.id)} className=\"ri-heart-fill favorite favorite-btn\"></i>\r\n            ) \r\n        }else{\r\n            return (\r\n                <i onClick={() => addToFavorite(product)} className=\"ri-heart-line favorite favorite-btn\"></i>\r\n            ) \r\n        }\r\n    }\r\n\r\n    // render JSX\r\n    return (\r\n        <div key={product.id} className=\"product-card\">\r\n            <div className=\"product-image\">\r\n                {/* product image */}\r\n                <img src={product.url} alt=\"product\" />\r\n            </div>\r\n            <div className=\"product-info\">\r\n                {/* product title */}\r\n                <h5>{product.title}</h5>\r\n                \r\n                {/* product price */}\r\n                <h6>$ {product.price}</h6>\r\n                \r\n                {/* favorite button */}\r\n                { favoriteButton() }\r\n                \r\n                {/* cart button */}\r\n                { cartButton() }\r\n\r\n                {/* detail button */}\r\n                <Link to={`/product/${product.id}`}>\r\n                    <button className=\"view-detail-btn\">\r\n                        View Details\r\n                    </button>\r\n                </Link> \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductItem\r\n","import React, {useContext} from 'react'\r\nimport { StateContext } from '../../context/GlobalState'\r\nimport ProductItem from './ProductItem'\r\nimport './product.css'\r\n\r\n\r\nfunction ProductGrid() {\r\n    const {products} = useContext(StateContext)\r\n    \r\n    return(\r\n        <section className=\"products\">\r\n            {\r\n                products.map((product) => <ProductItem key={product.id} product={product}/>)\r\n            }\r\n        </section>\r\n    ) \r\n}\r\n\r\nexport default ProductGrid\r\n","import React from 'react'\r\nimport ProductGrid from '../components/Product/ProductGrid'\r\n\r\nfunction Store() {\r\n    return (\r\n        <>\r\n            <ProductGrid />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Store\r\n","import React from 'react'\r\n\r\nfunction About() {\r\n    return (\r\n        <div className=\"about-page\">\r\n           <h4>A Simple Online Shopping Cart built with React Hooks and Context API</h4>\r\n           <p>Code is available at <a href=\"https://github.com/mahmud-sajib/ReactJs-Online-Store\" target=\"blank\">Github</a></p>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React,{useContext} from 'react'\r\nimport { StateContext } from '../../context/GlobalState'\r\nimport './cartitem.css'\r\n\r\nfunction CartItem({item}) {\r\n    // consuming contexts\r\n    const {increaseCount, decreaseCount, removeFromCart} = useContext(StateContext)\r\n\r\n    // dteremine whether decrease or remove button to display\r\n    function decreaseButton() {\r\n        if(item.quantity === 1){\r\n            return (\r\n                <button onClick={() => removeFromCart(item)}>\r\n                    <i className=\"ri-delete-bin-line\"></i>\r\n                </button>\r\n            )\r\n                \r\n        } else {\r\n            return (\r\n                <button onClick={() => decreaseCount(item.id)}>\r\n                    <i className=\"ri-arrow-down-circle-line\"></i>\r\n                </button> \r\n            )\r\n        }\r\n    }\r\n\r\n    // render JSX\r\n    return (\r\n        <div className=\"cart-detail\">\r\n            <div className=\"product-info-col\">\r\n                <img src={item.url} alt=\"product\" />\r\n                <h5>{item.title}</h5>\r\n                <h5>$ {item.price}</h5>\r\n            </div>\r\n            <div className=\"product-qty-col\">\r\n                Qty: {item.quantity}\r\n            </div>\r\n            <div className=\"product-counter-col\">\r\n                <button onClick={() => increaseCount(item.id)}>\r\n                    <i className=\"ri-arrow-up-circle-line\"></i>\r\n                </button>\r\n                <br/>\r\n                {/* decrease or remove button */}\r\n                {decreaseButton()}\r\n                    \r\n            </div>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default CartItem\r\n","import React, {useContext} from 'react'\r\nimport CartItem from '../components/CartItem/CartItem'\r\nimport { StateContext } from '../context/GlobalState'\r\n\r\nfunction Cart() {\r\n    // consuming contexts\r\n    const {total, cartItems, totalItems, resetCart, checkOutCart} = useContext(StateContext)\r\n    \r\n    // render JSX\r\n    return (\r\n        <>\r\n        <section className=\"cart-section\">\r\n            {\r\n                cartItems.map((item) => <CartItem key={item.id} item={item}/>)\r\n            }\r\n            \r\n            <div className=\"summary-detail\">\r\n                <div className=\"items\">\r\n                    {\r\n                       totalItems===0 ? <h4 className=\"warn-txt\">No Item in Cart!</h4>:\r\n                       <h4>Total Items: {totalItems}</h4>\r\n                    }\r\n                    \r\n                </div>\r\n                <div className=\"amounts\">\r\n                    <h4>Total Amount: {total}</h4>\r\n                </div>\r\n                {\r\n                  totalItems>0 &&   \r\n                  <button onClick={()=>checkOutCart()} className=\"checkout\">Checkout</button>\r\n                }\r\n                {\r\n                  totalItems>0 && \r\n                  <button onClick={()=>resetCart()} className=\"reset\">Reset</button>\r\n                }\r\n            </div>\r\n        </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n","import React, {useContext} from 'react'\r\nimport { StateContext } from '../../context/GlobalState'\r\nimport {Link} from 'react-router-dom'\r\nimport \"./favoriteitem.css\"\r\n\r\nfunction FavoriteItem({item}) {\r\n    // consuming contexts\r\n    const {removeFromFavorite} = useContext(StateContext)\r\n\r\n    // render JSX\r\n    return (\r\n        <div className=\"wishlist-detail\">\r\n            <div className=\"product-info-col\">\r\n                <img src={item.url} alt=\"product\" />\r\n                <h5>{item.title}</h5>\r\n                <h5>$ {item.price}</h5>\r\n            </div>\r\n            <div className=\"product-qty-col\">\r\n                <Link to={`/product/${item.id}`}>\r\n                    <button className=\"view-detail-btn\">\r\n                        View Details\r\n                    </button>\r\n                </Link> \r\n            </div>\r\n            <div className=\"product-counter-col\">\r\n                <button onClick={() => removeFromFavorite(item.id)}>\r\n                    <i className=\"ri-dislike-line\"></i> \r\n                    <span className=\"undofavorite-text\">Remove from Favorite</span>\r\n                </button>\r\n            </div>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FavoriteItem\r\n","import React, {useContext} from 'react'\r\nimport FavoriteItem from '../components/FavoriteItem/FavoriteItem'\r\nimport { StateContext } from '../context/GlobalState'\r\n\r\nfunction Wishlist() {\r\n    // consuming contexts\r\n    const {favoriteItems} = useContext(StateContext)\r\n    \r\n    return (\r\n        <section className=\"wishlist-section\">\r\n            {\r\n                favoriteItems.map(item => <FavoriteItem key={item.id} item={item} />)\r\n            }\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Wishlist\r\n","import Header from './components/Header/Header'\r\nimport Footer from './components/Footer/Footer';\r\nimport ProductDetail from './components/Product/ProductDetail';\r\nimport Store from './pages/Store';\r\nimport About from './pages/About';\r\nimport Cart from './pages/Cart';\r\nimport Wishlist from './pages/Wishlist';\r\nimport {Switch, Route} from \"react-router-dom\"\r\nimport './style.css'\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n        <Header />\r\n        \r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Store />\r\n          </Route>\r\n\r\n          <Route path=\"/about\">\r\n            <About />\r\n          </Route>\r\n\r\n          <Route path=\"/cart\">\r\n            <Cart />\r\n          </Route>\r\n\r\n          <Route path=\"/wishlist\">\r\n            <Wishlist />\r\n          </Route>\r\n\r\n          <Route path=\"/product/:productId\">\r\n            <ProductDetail />\r\n          </Route>\r\n        </Switch>\r\n        \r\n        <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { StateProvider } from './context/GlobalState';\r\nimport {BrowserRouter as Router} from \"react-router-dom\"\r\n\r\nReactDOM.render(\r\n  <StateProvider>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </StateProvider>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}